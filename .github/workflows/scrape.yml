name: Weekly Scrape & Upload

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 0'

jobs:
  scrape-and-refresh:
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Clear all “2” tables (force IPv4)
        run: |
          # resolve to an IPv4 address
          IPV4=$(getent ahostsv4 $DB_HOST | awk 'NR==1{print $1}')
          echo "Using IPv4: $IPV4"
          PGPASSWORD="$DB_PASS" psql \
            -h "$IPV4" \
            -p 5432 \
            -U "$DB_USER" \
            -d "$DB_NAME" \
            -f scraper/clear_appended_tables.sql

      - name: Set up Python & run scraper
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies & chromium
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install -y chromium-browser chromium-chromedriver
      # - name: Run scraper
      #   working-directory: scraper
      #   env:
      #     SUPABASE_URL:               ${{ secrets.SUPABASE_URL }}
      #     SUPABASE_SERVICE_ROLE_KEY:  ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      #   run: python scrape_upload.py

      - name: Rebuild free‐slots (force IPv4)
        run: |
          IPV4=$(getent ahostsv4 $DB_HOST | awk 'NR==1{print $1}')
          echo "Using IPv4: $IPV4"
          PGPASSWORD="$DB_PASS" psql \
            -h "$IPV4" \
            -p 5432 \
            -U "$DB_USER" \
            -d "$DB_NAME" \
            -f scraper/create_free_rooms.sql
